//
// AppointmentReschedulePutPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for rescheduling an appointment record. */
public struct AppointmentReschedulePutPayload: Codable, Hashable {

    /** The new date and time (ISO 8601 format) when the appointment is set to start. */
    public var startAt: Date?
    /** The new date and time (ISO 8601 format) when the appointment is set to end. */
    public var endAt: Date?
    /** Send a notification to the appointment's order's customer that the appointment was rescheduled. */
    public var notifyCustomer: Bool?

    public init(startAt: Date?, endAt: Date?, notifyCustomer: Bool? = nil) {
        self.startAt = startAt
        self.endAt = endAt
        self.notifyCustomer = notifyCustomer
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startAt = "start_at"
        case endAt = "end_at"
        case notifyCustomer = "notify_customer"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(startAt, forKey: .startAt)
        try container.encode(endAt, forKey: .endAt)
        try container.encodeIfPresent(notifyCustomer, forKey: .notifyCustomer)
    }
}

