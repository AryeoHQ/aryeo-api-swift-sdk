//
// ProductVariant.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A variant of a product. */
public struct ProductVariant: Codable {

    /** ID of the product variant. UUID Version 4. */
    public private(set) var id: UUID
    /** The title of the product variant. */
    public private(set) var title: String
    /** A positive integer in the smallest currency unit (that is, 100 cents for $1.00) representing the price of the product variant. */
    public private(set) var price: Int
    /** The duration of the product item, in minutes. */
    public private(set) var duration: Int?

    public init(id: UUID, title: String, price: Int, duration: Int? = nil) {
        self.id = id
        self.title = title
        self.price = price
        self.duration = duration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case price
        case duration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(title, forKey: .title)
        try container.encode(price, forKey: .price)
        try container.encodeIfPresent(duration, forKey: .duration)
    }
}

