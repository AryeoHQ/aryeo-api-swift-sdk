//
// OrderPostPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for creating an order. */
public struct OrderPostPayload: Codable, Hashable {

    public enum FulfillmentStatus: String, Codable, CaseIterable {
        case fulfilled = "FULFILLED"
        case unfulfilled = "UNFULFILLED"
    }
    public enum PaymentStatus: String, Codable, CaseIterable {
        case paid = "PAID"
        case unpaid = "UNPAID"
    }
    /** The fulfillment status of the order. Defaults to \"UNFULFILLED\". */
    public var fulfillmentStatus: FulfillmentStatus?
    /** The payment status of the order. Defaults to \"UNPAID\".  */
    public var paymentStatus: PaymentStatus?
    /** Google Places ID of the address to attach to the order. */
    public var placeId: String?

    public init(fulfillmentStatus: FulfillmentStatus? = nil, paymentStatus: PaymentStatus? = nil, placeId: String? = nil) {
        self.fulfillmentStatus = fulfillmentStatus
        self.paymentStatus = paymentStatus
        self.placeId = placeId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fulfillmentStatus = "fulfillment_status"
        case paymentStatus = "payment_status"
        case placeId = "place_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fulfillmentStatus, forKey: .fulfillmentStatus)
        try container.encodeIfPresent(paymentStatus, forKey: .paymentStatus)
        try container.encodeIfPresent(placeId, forKey: .placeId)
    }
}

