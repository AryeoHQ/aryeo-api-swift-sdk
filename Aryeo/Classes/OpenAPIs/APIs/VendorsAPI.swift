//
// VendorsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class VendorsAPI {

    /**
     Get vendors available to a group.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendors(apiResponseQueue: DispatchQueue = Aryeo.apiResponseQueue, completion: @escaping ((_ data: GroupCollection?, _ error: Error?) -> Void)) {
        getVendorsWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get vendors available to a group.
     - GET /vendors
     - Get vendors available to a group.
     - BASIC:
       - type: http
       - name: JWT
     - returns: RequestBuilder<GroupCollection> 
     */
    open class func getVendorsWithRequestBuilder() -> RequestBuilder<GroupCollection> {
        let path = "/vendors"
        let URLString = Aryeo.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<GroupCollection>.Type = Aryeo.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**
     Get vendors that can be added to the group's vendor list.
     
     - parameter query: (query) A search query. (optional)
     - parameter perPage: (query) The number of items per page. Defaults to 25. (optional)
     - parameter page: (query) The requested page. Defaults to 1. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorsSearch(query: String? = nil, perPage: String? = nil, page: String? = nil, apiResponseQueue: DispatchQueue = Aryeo.apiResponseQueue, completion: @escaping ((_ data: GroupCollection?, _ error: Error?) -> Void)) {
        getVendorsSearchWithRequestBuilder(query: query, perPage: perPage, page: page).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get vendors that can be added to the group's vendor list.
     - GET /vendors/search
     - Get vendors that can be added to the group's vendor list, excluding those already available to a group. 
     - BASIC:
       - type: http
       - name: JWT
     - parameter query: (query) A search query. (optional)
     - parameter perPage: (query) The number of items per page. Defaults to 25. (optional)
     - parameter page: (query) The requested page. Defaults to 1. (optional)
     - returns: RequestBuilder<GroupCollection> 
     */
    open class func getVendorsSearchWithRequestBuilder(query: String? = nil, perPage: String? = nil, page: String? = nil) -> RequestBuilder<GroupCollection> {
        let path = "/vendors/search"
        let URLString = Aryeo.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "query": query?.encodeToJSON(),
            "per_page": perPage?.encodeToJSON(),
            "page": page?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<GroupCollection>.Type = Aryeo.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }
}
